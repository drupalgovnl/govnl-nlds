name: Continuous Deployment

on:
  push:
    branches:
      - main
  pull_request:

env:
  NODE_VERSION: '20'

jobs:
  # Single setup job that handles installation and caching
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-keys.outputs.cache-key }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Node.js version
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version-file: .nvmrc
          cache: npm

      - name: Generate cache keys
        id: cache-keys
        run: |
          echo "cache-key=node-modules-${{ hashFiles('**/package-lock.json') }}" >> $GITHUB_OUTPUT

      - name: Cache node modules
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        id: cache-node-modules
        with:
          path: |
            node_modules
            **/node_modules
          key: ${{ steps.cache-keys.outputs.cache-key }}
          restore-keys: |
            node-modules-

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci --frozen-lockfile

  # Run linting, testing, and building in parallel
  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Node.js version
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version-file: .nvmrc

      - name: Restore node modules cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: |
            node_modules
            **/node_modules
          key: ${{ needs.setup.outputs.cache-key }}

      - name: 'Continuous Integration: lint JavaScript'
        run: npm run lint:js

      - name: 'Continuous Integration: lint CSS'
        run: npm run lint:css

      - name: 'Continuous Integration: lint formatting'
        run: npm run lint:format

      - name: 'Continuous Integration: type check'
        run: npm run lint:types

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Node.js version
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version-file: .nvmrc

      - name: Restore node modules cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: |
            node_modules
            **/node_modules
          key: ${{ needs.setup.outputs.cache-key }}

      - name: 'Continuous Integration: test'
        run: npm run --if-present test

  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Node.js version
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version-file: .nvmrc

      - name: Restore node modules cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: |
            node_modules
            **/node_modules
          key: ${{ needs.setup.outputs.cache-key }}

      - name: 'Continuous Integration: build'
        env:
          BASE_URL: '/govnl-nlds/'
        run: npm run --if-present build

      - name: 'Bundle Analysis: check size limits'
        run: npm run size

      - name: 'Retain build artifact: storybook'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: storybook
          path: packages/storybook/dist/
          retention-days: 1

  publish-npm:
    runs-on: ubuntu-latest
    needs: [build, lint, test]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout release branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Node.js version
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'

      - name: Restore node modules cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: |
            node_modules
            **/node_modules
          key: node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: 'Continuous Deployment: install (if cache miss)'
        run: npm ci --frozen-lockfile --prefer-offline

      - name: 'Continuous Deployment: build'
        run: npm run --if-present build

      - name: 'Continuous Deployment: publish changeset to GitHub repository'
        uses: changesets/action@06245a4e0a36c064a573d4150030f5ec548e4fcc # v1.4.10
        id: changeset
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}
          GIT_AUTHOR_NAME: 'GovNL Design System'
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
          GIT_COMMITTER_NAME: 'GovNL Design System'
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          commit: 'docs(release): design system packages'
          setupGitUser: false
          title: 'docs(release): design system packages'
          publish: 'npm run publish:changeset'

  deploy-storybook:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout release branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: 'Restore build artifact: Storybook'
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: storybook
          path: packages/storybook/dist/

      - name: Continuous Deployment to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@15de0f09300eea763baee31dff6c6184995c5f6a # v4.7.2
        with:
          branch: gh-pages
          folder: packages/storybook/dist/

permissions:
  contents: write
  id-token: write
